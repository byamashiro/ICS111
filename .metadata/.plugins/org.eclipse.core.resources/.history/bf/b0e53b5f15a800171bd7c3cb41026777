import java.awt.Color;
import java.io.FileReader;
import java.util.Scanner;

public class roombrah {
	static int counter = 0;
	
	public static void main(String[] args) throws java.io.IOException {
		
		
		
		int posX = 100;		//0	// Stores the x position of the probe
		int posY = 200;			// Stores the y position of the probe	
		int directionX = 5;		// Stores the x direction of the probe
		int directionY = 5;		// Stores the y direction of the probe
		int rotationAngle = 0;	// Stores the rotation angle of the probe
		int saberX = 700/2;		// Stores X Position of the light saber 

		int bounces = 0;		// Stores the number of times the probe has bounced off the lightsaber
		
		
		
		
		Scanner fileScanner = new Scanner(new FileReader("level.txt"));

		int width = fileScanner.nextInt();
		int height = fileScanner.nextInt();
		String inputText = fileScanner.nextLine();

		EZ.initialize(width*32,height*32);
		EZ.setBackgroundColor(new Color(0, 0,0)); 
		
		EZImage probePicture = EZ.addImage("probe.png", 0,0);
		
		int[] wallX = new int[1000];
		int[] wallY = new int[1000];
		
		
		for(int row = 0; row < height; row++){
			
			inputText = fileScanner.nextLine();
			System.out.println(inputText);
			
			// int counter = 0;
			for (int column = 0; column < inputText.length(); column++){
				
				char ch = inputText.charAt(column);
		
				switch(ch){
					case 'W':
						EZImage wallPlacement = EZ.addImage("dirt.png",column*32,row*32);
						wallX[counter] = wallPlacement.getXCenter();
						wallY[counter] = wallPlacement.getYCenter();
						
						counter++;
						break;	
						
					case 'D':
						EZ.addImage("grass.png",column*32,row*32);
						
						
						break;
					/*
					case 'L':
						EZ.addImage("lava.png",column*32,row*32);
						break;
					*/ 
					default:
						// Do nothing
						break;
							
				}
			} 
		}
		
		/*
		for (int i=0; i<counter; i++) {
			System.out.println(wallX[i] + ", " + wallY[i]);
		}
		*/
		
		
		
		
		while(true){
			
			probePicture.translateTo(posX, posY); // Set the position of the probe.

			// probePicture.rotateTo(rotationAngle); // Set the rotation angle of the probe.
								
			posX= posX+directionX;
			posY= posY+directionY;
			
			System.out.println(posX + ", " + posY);
			
			// rotationAngle+=directionX;

			/*
			if (posX > 700 ) {
				directionX = -directionX;
			}
			if (posX < 0) {
				directionX = -directionX;
			}
			*/
			/*
			for (int i = 0; i < 100; i++ ) {
				if (probePicture.isPointInElement( wallX[i], wallY[i]  ) ) {
					directionX = -directionX ;
					directionY = -directionY;
				}
			}
			*/
			
			for (int i = 0; i < 100; i++ ) {
				if (posX == wallX[i] && posY == wallY[i]) {
					directionX = -directionX ;
					directionY = -directionY;
				}
			}
			

			
//			if ((posX > 700) || (posX < 0)) {
//				directionX = -directionX;
//			}
			
			if (posY > 600 ) {		// if the ball reaches all the way to the bottom reset it to the top
				posY=0;
			}
			if (posY < 0) {
				directionY = -directionY;
			}
			
			if (EZInteraction.isKeyDown('d')) {
				saberX+=10;
				if (saberX > 500) {
					saberX-=10;
				}
			} else if (EZInteraction.isKeyDown('a')) {
				saberX-=10;
				if (saberX <= 0){
					saberX+=10;
				}
			}
			
			/*
			int halfSaberWidth = saberPicture.getWidth()/2;
			
			saberPicture.translateTo(saberX,480);
			
			if ((posX < saberX+halfSaberWidth) && (posX > saberX-halfSaberWidth) && (posY > 460) && (posY < 480)){

				directionY = -directionY;
				clashSound.play();
				bounces++;
				if (bounces == 3) {
					impressiveSound.play();
					bounces = 0;
				}
			}
			*/
			
			EZ.refreshScreen();
		}
	}
}